[main]
hashService = org.apache.shiro.crypto.hash.DefaultHashService
hashService.hashAlgorithmName = SHA-512
hashService.hashIterations = 500000

passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordService.hashService = $hashService

passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService = $passwordService

dataSource = org.elsysbg.ip.jobs.JobsDataSource

jdbcRealmNormalUser = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealmNormalUser.dataSource = $dataSource
jdbcRealmNormalUser.permissionsLookupEnabled = true
jdbcRealmNormalUser.authenticationQuery = SELECT password FROM NormalUser WHERE username = ?
jdbcRealmNormalUser.userRolesQuery = SELECT username FROM NormalUser WHERE username = ?
jdbcRealmNormalUser.permissionsQuery = SELECT permission FROM (VALUES \
	('unknown:permission', 'unknownrole') \
	) AS t (permission, role) where t.role= ?
jdbcRealmNormalUser.credentialsMatcher = $passwordMatcher

jdbcRealmEmployer = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealmEmployer.dataSource = $dataSource
jdbcRealmEmployer.permissionsLookupEnabled = true
jdbcRealmEmployer.authenticationQuery = SELECT password FROM Employer WHERE username = ?
jdbcRealmEmployer.userRolesQuery = SELECT username FROM Employer WHERE username = ?
jdbcRealmEmployer.permissionsQuery = SELECT permission FROM (VALUES \
	('unknown:permission', 'unknownrole') \
	) AS t (permission, role) where t.role= ?
jdbcRealmEmployer.credentialsMatcher = $passwordMatcher

securityManager.realms=$jdbcRealmNormalUser, $jdbcRealmEmployer

[urls]